In the previous video, we looked at how to use our custom hook, called useInput, to process form element inputs and then reset those values. And we can use this hook across any project that uses forms. There also are a ton of different form libraries that you can reach out to as well. So I wanted to just give you a sense of what a few of these are. The first of these is called Formik, which you can find at formik.org. This is a great way of being able to, basically, handle submitting these forms. We can take in initial values and think about the form holistically as a collection of different fields. There's also a library called React Hook Form, which helps us with creating forms that use validation. Of course, react hooks are in play with this one as well. And there's a lot of cool things in the API for type script and other advanced features that you can use to create some really scalable forms. So I just wanted to point these out to you. I also wanted to pull up another website called useHooks at usehooks.com. This is not form specific, but there are a ton of different resources here, a ton of different hooks that you can think of as being, sort of, like recipes for creating different types of hooks. There are some really common use cases that you'll see here, and you can open all of them in CodeSandbox, so check them out. Formik, React Hook Form, useHooks all are great resources if you want to, kind of, study what they're doing or if you want to incorporate some of these tools into your own projects.

Formik docs: formik.org
React Hook forms: react-hook-form.org
useHooks: useHooks.com